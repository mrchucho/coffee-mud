* Does "attempt enter portal" really need room: arg?
* Should logic have "owner" property? If so, improve how GameEntity.addLogic
  works. Maybe have it work more like Game.createRoom, etc.
DONE enter/leave room on enter/leave game/realm!
* Output filters: could be chainable, but for now go simple
  [EOL] = \n or \r\n
  [CLEAR]
  [BOLD][/BOLD]
DONE Class/Module organization: file only exports a Factory method that
  instantiates one of the "private" classes in the file/module:

  class FooLogic
  class MooLogic
  ...
  exports.createLogic = (name, owner) ->
    return new <name>(owner) # not sure how to do that part ;)
  > This will be helpful for loading entities (and their logic) from YAML
* Should logic have "owner" property? If so, improve how GameEntity.addLogic
  works. Maybe have it work more like Game.createRoom, etc.
DONE enter/leave room on enter/leave game/realm!
* Unrecognized command error
* slash commands
* use [portal]
* Make it easier to read... spaces? bolding names?
DONE enter/leave room on enter/leave game/realm!
* Raise error if command is missing arguments
* Run from a chroot jail, log to file (+logrotate)?
* Should "actions" look like this instead: 'action', performer, {args:...}
* Improve Room & "look"
  > Replace player name with "You" in list of occupants
  > You are in <room.name>. <room.description>.
* Implement: /, clear
* Logic:
  DONE lib/logic
  DONE require <directory>
  DONE Implement some Portal logic
  > Try writing a BLOCKING logic and see how everything else reacts
